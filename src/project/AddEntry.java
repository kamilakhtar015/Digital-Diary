/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import java.sql.DriverManager;
import java.sql.SQLException;
//import java.util.Date;
import java.sql.Date;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author user
 */
public class AddEntry extends javax.swing.JFrame {

    java.sql.Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    ArrayList<WriteEntry> write;
    private CreateAccount acc;
    
    public AddEntry() {
        initComponents();

    }

    public AddEntry(CreateAccount obj) throws ClassNotFoundException, SQLException {
        initComponents();
        setLocationRelativeTo(null);
        this.acc = obj;
        write = new ArrayList();
        populateArrayList();
        printArrayList();
    }

    public void printArrayList() {
        for (int i = 0; i < write.size(); i++) {
            System.out.println(write.get(i).getEntryTitle() + "  " + write.get(i).getEntryBody());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        eBody = new javax.swing.JTextArea();
        post = new javax.swing.JButton();
        save = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        eTitle = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        jFormattedTextField1.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        eBody.setColumns(20);
        eBody.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        eBody.setRows(5);
        jScrollPane1.setViewportView(eBody);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 110, 270, 230));

        post.setBackground(new java.awt.Color(44, 182, 125));
        post.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        post.setText("Post");
        post.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postActionPerformed(evt);
            }
        });
        jPanel1.add(post, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 350, 70, 30));

        save.setBackground(new java.awt.Color(44, 182, 125));
        save.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jPanel1.add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 350, 70, 30));

        back.setBackground(new java.awt.Color(44, 182, 125));
        back.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 350, 80, 30));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Entry Title");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 30, 110, 34));

        eTitle.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        eTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eTitleActionPerformed(evt);
            }
        });
        jPanel1.add(eTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, 270, 31));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/MacBook_Air_-_9_50.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 410));

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eTitleActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        this.show(false);
        new MainPage(acc).show();
    }//GEN-LAST:event_backActionPerformed

    // adding entries to arraylist from database
    public void populateArrayList() throws ClassNotFoundException, SQLException {
        Class.forName("oracle.jdbc.driver.OracleDriver");

        Connection con;
        con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "c##seproject", "123");

        try {
            PreparedStatement pst;
            String query = "SELECT ENTRY_TITLE, ENTRY_BODY FROM C##SEPROJECT.ENTRY where USERNAME = " + "'" + this.acc.getUsername() + "'";
            pst = con.prepareStatement(query);

            ResultSet rs;
            rs = pst.executeQuery(query);

            while (rs.next()) {
                String temp_eTitle = rs.getString("ENTRY_TITLE");
                String temp_eBody = rs.getString("ENTRY_BODY");

                write.add(new WriteEntry(temp_eTitle, temp_eBody));
            }

        } catch (Exception e) {
            System.out.println(e);
        }

    }

    // returning the entry id of a particular user
    public int entry_id(String uname) throws ClassNotFoundException, SQLException {
        Class.forName("oracle.jdbc.driver.OracleDriver");

        Connection con;
        con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "c##seproject", "123");

        int abc = 0;

        try {
            PreparedStatement pst;
            String query = "select count(*) as \"EID\" from c##seproject.ENTRY where USERNAME = " + "'" + uname + "'";
            System.out.println(query);
            pst = con.prepareStatement(query);

            ResultSet rs;
            rs = pst.executeQuery(query);

            if (rs.next()) {
                abc = rs.getInt(1);
            }

        } catch (Exception e) {
            System.out.println(e);
        }
        return abc;
    }

    private void postActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postActionPerformed
        // TODO add your handling code here:

        try {

            con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "c##seproject", "123");

            System.out.println("entry id " + entry_id(this.acc.getUsername()));

            int entryId = entry_id(this.acc.getUsername());
            entryId++;
            String username = this.acc.getUsername();
            String entryTitle = eTitle.getText();
            String entryType = "public";
            long millis = System.currentTimeMillis();
            java.sql.Date date = new java.sql.Date(millis);
            String entryBody = eBody.getText();

            if (entryTitle.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Entry should have a tiltle");
                return;
            }

            if (entryBody.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please write something!");
                return;
            }

            // adding new entries to array list
            WriteEntry user = new WriteEntry(entryTitle, entryBody);
            write.add(user);

            String sql = "INSERT INTO ENTRY (ENTRY_ID, USERNAME, ENTRY_TITLE, ENTRY_TYPE, ENTRY_DATE, ENTRY_BODY) VALUES(?, ?, ?, ?, ?, ?)";
            pst = con.prepareStatement(sql);

            pst.setInt(1, entryId);
            pst.setString(2, username);
            pst.setString(3, entryTitle);
            pst.setString(4, entryType);
            pst.setDate(5, date);
            pst.setString(6, entryBody);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Successfully Posted");

            eTitle.setText("");
            eBody.setText("");

            this.show(false);
            new MainPage(acc).show();
        } catch (SQLException ex) {
            Logger.getLogger(SignupPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddEntry.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_postActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:

        try {

            con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "c##seproject", "123");

            System.out.println("entry id " + entry_id(this.acc.getUsername()));

            int entryId = entry_id(this.acc.getUsername());
            entryId++;
            String username = this.acc.getUsername();
            String entryTitle = eTitle.getText();
            String entryType = "private";
            long millis = System.currentTimeMillis();
            java.sql.Date date = new java.sql.Date(millis);
            String entryBody = eBody.getText();

            // If entry title is empty
            if (entryTitle.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Entry should have a tiltle");
                return;
            }

            // if entrybody is empty
            if (entryBody.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please write something!");
                return;
            }

            String sql = "INSERT INTO ENTRY (ENTRY_ID, USERNAME, ENTRY_TITLE, ENTRY_TYPE, ENTRY_DATE, ENTRY_BODY) VALUES(?, ?, ?, ?, ?, ?)";
            pst = con.prepareStatement(sql);

            pst.setInt(1, entryId);
            pst.setString(2, username);
            pst.setString(3, entryTitle);
            pst.setString(4, entryType);
            pst.setDate(5, date);
            pst.setString(6, entryBody);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Successfully! Saved Entry");

            eTitle.setText("");
            eBody.setText("");

            eTitle.setText("");
            eBody.setText("");

            this.show(false);
            new MainPage(this.acc).show();
        } catch (SQLException ex) {
            Logger.getLogger(SignupPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddEntry.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_saveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddEntry().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JTextArea eBody;
    private javax.swing.JTextField eTitle;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton post;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
}
